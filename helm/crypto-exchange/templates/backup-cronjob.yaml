{{- if .Values.backup.enabled }}
apiVersion: batch/v1
kind: CronJob
metadata:
  name: {{ include "crypto-exchange.fullname" . }}-db-backup
  labels:
    {{- include "crypto-exchange.labels" . | nindent 4 }}
    app.kubernetes.io/component: backup
spec:
  schedule: {{ .Values.backup.schedule | quote }}
  successfulJobsHistoryLimit: {{ .Values.backup.successfulJobsHistoryLimit }}
  failedJobsHistoryLimit: {{ .Values.backup.failedJobsHistoryLimit }}
  jobTemplate:
    spec:
      template:
        metadata:
          labels:
            {{- include "crypto-exchange.selectorLabels" . | nindent 12 }}
            app.kubernetes.io/component: backup
        spec:
          restartPolicy: OnFailure
          containers:
          - name: postgres-backup
            image: postgres:15-alpine
            command:
            - /bin/sh
            - -c
            - |
              TIMESTAMP=$(date +%Y%m%d_%H%M%S)
              BACKUP_FILE="/backup/crypto_exchange_${TIMESTAMP}.sql"
              
              echo "Starting backup at $(date)"
              pg_dump -h {{ include "crypto-exchange.postgresql.write.fullname" . }} \
                      -U {{ .Values.postgresql.write.username }} \
                      -d {{ .Values.postgresql.write.database }} \
                      > ${BACKUP_FILE}
              
              if [ $? -eq 0 ]; then
                echo "Backup completed successfully: ${BACKUP_FILE}"
                gzip ${BACKUP_FILE}
                echo "Compressed to: ${BACKUP_FILE}.gz"
                ls -lh /backup/
              else
                echo "Backup failed!"
                exit 1
              fi
              
              # Keep only last N backups
              cd /backup
              ls -t crypto_exchange_*.sql.gz | tail -n +{{ .Values.backup.retention | add1 }} | xargs -r rm
              echo "Cleanup complete. Remaining backups:"
              ls -lh /backup/
            env:
            - name: PGPASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ include "crypto-exchange.fullname" . }}-postgresql
                  key: POSTGRES_PASSWORD
            volumeMounts:
            - name: backup-storage
              mountPath: /backup
            resources:
              {{- toYaml .Values.backup.resources | nindent 14 }}
          volumes:
          - name: backup-storage
            {{- if .Values.backup.persistence.enabled }}
            persistentVolumeClaim:
              claimName: {{ include "crypto-exchange.fullname" . }}-backup
            {{- else }}
            hostPath:
              path: {{ .Values.backup.hostPath }}
              type: DirectoryOrCreate
            {{- end }}
{{- end }}
